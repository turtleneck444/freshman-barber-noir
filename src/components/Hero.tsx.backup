import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ArrowRightIcon, Calendar, Scissors, Clock, MapPin, Phone, User, Mail } from "lucide-react";
import { cn } from "@/lib/utils";
import { useState, useEffect } from "react";

const Hero = () => {
  const [selectedService, setSelectedService] = useState<string | null>(null);
  const [selectedDate, setSelectedDate] = useState<string>("");
  const [selectedTime, setSelectedTime] = useState<string>("");
  const [customerName, setCustomerName] = useState<string>("");
  const [customerPhone, setCustomerPhone] = useState<string>("");
  const [customerEmail, setCustomerEmail] = useState<string>("");
  const [particles, setParticles] = useState<Array<{ id: number; x: number; y: number; size: number; speed: number; opacity: number }>>([]);

  const services = [
    { id: "signature-cut", name: "Signature Cut", price: "$45", duration: "45 min" },
    { id: "traditional-shave", name: "Traditional Shave", price: "$35", duration: "30 min" },
    { id: "royal-package", name: "Royal Package", price: "$80", duration: "90 min" },
    { id: "beard-styling", name: "Beard Styling", price: "$30", duration: "25 min" },
    { id: "luxury-experience", name: "Luxury Experience", price: "$120", duration: "120 min" },
    { id: "quick-touchup", name: "Quick Touch-up", price: "$20", duration: "15 min" }
  ];

  const timeSlots = [
    "9:00 AM", "9:30 AM", "10:00 AM", "10:30 AM", "11:00 AM", "11:30 AM",
    "12:00 PM", "12:30 PM", "1:00 PM", "1:30 PM", "2:00 PM", "2:30 PM",
    "3:00 PM", "3:30 PM", "4:00 PM", "4:30 PM", "5:00 PM", "5:30 PM",
    "6:00 PM", "6:30 PM", "7:00 PM", "7:30 PM"
  ];

  // Initialize particles
  useEffect(() => {
    const newParticles = Array.from({ length: 50 }, (_, i) => ({
      id: i,
      x: Math.random() * 100,
      y: Math.random() * 100,
      size: Math.random() * 4 + 1,
      speed: Math.random() * 0.5 + 0.1,
      opacity: Math.random() * 0.3 + 0.1
    }));
    setParticles(newParticles);
  }, []);

  // Animate particles
  useEffect(() => {
    const animateParticles = () => {
      setParticles(prev => prev.map(particle => ({
        ...particle,
        y: (particle.y + particle.speed) % 100,
        x: particle.x + Math.sin(particle.y * 0.01) * 0.1
      })));
    };

    const interval = setInterval(animateParticles, 50);
    return () => clearInterval(interval);
  }, []);

  const handleBooking = () => {
    if (selectedService && selectedDate && selectedTime && customerName && customerPhone) {
      alert(`Booking confirmed!\nService: ${selectedService}\nDate: ${selectedDate}\nTime: ${selectedTime}\nName: ${customerName}\nPhone: ${customerPhone}`);
    } else {
      alert("Please fill in all required fields");
    }
  };

  return (
    <section
      className={cn(
        "bg-white text-gray-900 relative overflow-hidden",
        "py-12 sm:py-24 md:py-32 px-4",
        "fade-bottom pb-0"
      )}
      id="home"
    >
      {/* Particle Background */}
      <div className="absolute inset-0 pointer-events-none">
        {particles.map((particle) => (
          <div
            key={particle.id}
            className="absolute rounded-full bg-red-500/20 animate-pulse"
            style={{
              left: `${particle.x}%`,
              top: `${particle.y}%`,
              width: `${particle.size}px`,
              height: `${particle.size}px`,
              opacity: particle.opacity,
              animationDelay: `${particle.id * 0.1}s`,
              animationDuration: `${2 + Math.random() * 2}s`
            }}
          />
        ))}
        
        {/* Floating geometric shapes */}
        <div className="absolute top-20 left-10 w-2 h-2 bg-red-500/30 rounded-full animate-bounce" style={{ animationDelay: '0.5s', animationDuration: '3s' }} />
        <div className="absolute top-40 right-20 w-3 h-3 bg-red-500/20 rounded-full animate-bounce" style={{ animationDelay: '1s', animationDuration: '4s' }} />
        <div className="absolute bottom-40 left-20 w-1 h-1 bg-red-500/40 rounded-full animate-bounce" style={{ animationDelay: '1.5s', animationDuration: '2.5s' }} />
        <div className="absolute top-60 right-40 w-2 h-2 bg-red-500/25 rounded-full animate-bounce" style={{ animationDelay: '2s', animationDuration: '3.5s' }} />
        <div className="absolute bottom-60 right-10 w-1 h-1 bg-red-500/35 rounded-full animate-bounce" style={{ animationDelay: '0.8s', animationDuration: '2.8s' }} />
        
        {/* Subtle gradient overlays */}
        <div className="absolute inset-0 bg-gradient-to-br from-red-50/30 via-transparent to-red-50/20" />
        <div className="absolute inset-0 bg-gradient-to-tl from-transparent via-red-50/10 to-transparent" />
      </div>

      <div className="relative z-10 mx-auto flex max-w-7xl flex-col gap-12 pt-16 sm:gap-24">
        <div className="flex flex-col items-center gap-6 text-center sm:gap-12">
          {/* Badge */}
          <Badge variant="outline" className="animate-appear gap-2 border-red-500/30 bg-red-50 text-gray-900">
            <span className="text-gray-700">Mississauga's Premier Barbershop</span>
            <a href="#services" className="flex items-center gap-1 text-red-600 hover:text-red-700">
              Learn More
              <ArrowRightIcon className="h-3 w-3" />
            </a>
          </Badge>

          {/* Title */}
          <h1 className="relative z-10 inline-block animate-appear bg-gradient-to-r from-gray-900 via-red-600 to-gray-900 bg-clip-text text-4xl font-semibold leading-tight text-transparent drop-shadow-2xl sm:text-6xl sm:leading-tight md:text-8xl md:leading-tight">
            The Freshmen Barbershop
          </h1>

          {/* Description */}
          <p className="text-md relative z-10 max-w-[550px] animate-appear font-medium text-gray-700 opacity-0 delay-100 sm:text-xl">
            Experience the future of barbering. Premium cuts, classic techniques, where tradition meets innovation.
          </p>

          {/* Actions */}
          <div className="relative z-10 flex animate-appear justify-center gap-4 opacity-0 delay-300">
            <Button variant="default" size="lg" asChild className="bg-red-600 hover:bg-red-700 text-white">
              <a href="#booking" className="flex items-center gap-2">
                <Calendar className="h-4 w-4" />
                Book Appointment
              </a>
            </Button>
            <Button variant="outline" size="lg" asChild className="border-gray-900 text-gray-900 hover:bg-gray-100">
              <a href="#services" className="flex items-center gap-2">
                <Scissors className="h-4 w-4" />
                View Services
              </a>
            </Button>
          </div>

          {/* Powerful Booking Widget */}
          <div className="relative pt-12 w-full max-w-4xl">
            <div className="animate-appear opacity-0 delay-700">
              <div className="relative overflow-hidden rounded-3xl border border-gray-200 bg-gradient-to-br from-gray-50 to-white p-8 shadow-2xl">
                {/* Widget Header */}
                <div className="text-center mb-8">
                  <h2 className="text-3xl font-bold text-gray-900 mb-2">Book Your Appointment</h2>
                  <p className="text-gray-600">Experience premium barbering at The Freshmen Barbershop</p>
                </div>

                <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                  {/* Service Selection */}
                  <div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
                      <Scissors className="h-5 w-5 text-red-600" />
                      Select Service
                    </h3>
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                      {services.map((service) => (
                        <button
                          key={service.id}
                          onClick={() => setSelectedService(service.id)}
                          className={`p-4 rounded-xl border-2 transition-all duration-300 text-left ${
                            selectedService === service.id
                              ? 'border-red-500 bg-red-50 text-gray-900'
                              : 'border-gray-200 bg-white text-gray-900 hover:border-red-300 hover:bg-red-50'
                          }`}
                        >
                          <div className="font-semibold">{service.name}</div>
                          <div className="text-sm text-gray-600">{service.duration}</div>
                          <div className="text-lg font-bold text-red-600">{service.price}</div>
                        </button>
                      ))}
                    </div>
                  </div>

                  {/* Booking Form */}
                  <div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
                      <Calendar className="h-5 w-5 text-red-600" />
                      Booking Details
                    </h3>
                    
                    <div className="space-y-4">
                      {/* Date Selection */}
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Select Date</label>
                        <input
                          type="date"
                          value={selectedDate}
                          onChange={(e) => setSelectedDate(e.target.value)}
                          min={new Date().toISOString().split('T')[0]}
                          className="w-full p-3 rounded-xl bg-white border border-gray-300 text-gray-900 placeholder-gray-500 focus:border-red-500 focus:outline-none focus:ring-2 focus:ring-red-500/20"
                        />
                      </div>

                      {/* Time Selection */}
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Select Time</label>
                        <div className="grid grid-cols-3 gap-2 max-h-32 overflow-y-auto">
                          {timeSlots.map((time) => (
                            <button
                              key={time}
                              onClick={() => setSelectedTime(time)}
                              className={`p-2 text-sm rounded-lg border transition-all duration-200 ${
                                selectedTime === time
                                  ? 'border-red-500 bg-red-50 text-gray-900'
                                  : 'border-gray-300 bg-white text-gray-900 hover:border-red-300 hover:bg-red-50'
                              }`}
                            >
                              {time}
                            </button>
                          ))}
                        </div>
                      </div>

                      {/* Customer Info */}
                      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">Name *</label>
                          <div className="relative">
                            <User className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
                            <input
                              type="text"
                              value={customerName}
                              onChange={(e) => setCustomerName(e.target.value)}
                              placeholder="Your full name"
                              className="w-full pl-10 pr-4 py-3 rounded-xl bg-white border border-gray-300 text-gray-900 placeholder-gray-500 focus:border-red-500 focus:outline-none focus:ring-2 focus:ring-red-500/20"
                            />
                          </div>
                        </div>
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">Phone *</label>
                          <div className="relative">
                            <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
                            <input
                              type="tel"
                              value={customerPhone}
                              onChange={(e) => setCustomerPhone(e.target.value)}
                              placeholder="(905) 123-4567"
                              className="w-full pl-10 pr-4 py-3 rounded-xl bg-white border border-gray-300 text-gray-900 placeholder-gray-500 focus:border-red-500 focus:outline-none focus:outline-none focus:ring-2 focus:ring-red-500/20"
                            />
                          </div>
                        </div>
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Email (Optional)</label>
                        <div className="relative">
                          <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
                          <input
                            type="email"
                            value={customerEmail}
                            onChange={(e) => setCustomerEmail(e.target.value)}
                            placeholder="your@email.com"
                            className="w-full pl-10 pr-4 py-3 rounded-xl bg-white border border-gray-300 text-gray-900 placeholder-gray-500 focus:border-red-500 focus:outline-none focus:ring-2 focus:ring-red-500/20"
                          />
                        </div>
                      </div>

                      {/* Book Button */}
                      <button
                        onClick={handleBooking}
                        className="w-full bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white font-bold py-4 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 flex items-center justify-center gap-2"
                      >
                        <Calendar className="h-5 w-5" />
                        Confirm Booking
                      </button>
                    </div>
                  </div>
                </div>

                {/* Contact Info */}
                <div className="mt-8 pt-6 border-t border-gray-200">
                  <div className="flex flex-wrap items-center justify-center gap-6 text-sm text-gray-600">
                    <div className="flex items-center gap-2">
                      <Phone className="h-4 w-4 text-red-600" />
                      <span>(905) 123-CUTS</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <MapPin className="h-4 w-4 text-red-600" />
                      <span>167 Queen St S, Mississauga</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <Clock className="h-4 w-4 text-red-600" />
                      <span>Open 7 Days a Week</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero;
